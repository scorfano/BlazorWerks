@page "/Bootstrap"

@using System.Text.Json
@using System.Text.Json.Serialization

@using BlazorWerks.Twitter
@using BlazorWerks.WebStorage

@inject IBootstrap bootstrap
@inject ILocalStorage localStorage
@inject ISessionStorage sessionStorage



@code {

    ElementReference MyAlert, MyModal, MyCarousel;

    JsonSerializerOptions Options = new JsonSerializerOptions(JsonSerializerDefaults.Web)
        {
            //WriteIndented = true,
            DefaultIgnoreCondition = JsonIgnoreCondition.WhenWritingDefault
        };

    string EventLog = "";

    void LogEvent(BootstrapEventArgs e)
    {
        EventLog = JsonSerializer.Serialize(e, Options) + "\n" + EventLog;
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            bootstrap.Carousel("#carousel-1").Cycle();
        }

        base.OnAfterRender(firstRender);
    }





}



<PageTitle>Bootstrap</PageTitle>

<div class="list-group">
    <div class="list-group-item active">
        <h3>Bootstrap Tests</h3>
    </div>
    <div class="list-group-item">
        <h3>Modal</h3>

        <a class="btn btn-primary" href="javascript:void(0)" @onclick=@(()=>bootstrap.Modal(MyModal).Show())>Show Modal</a>

        <!-- Modal -->
        <div @ref=MyModal @onbootstrap=@((e)=> LogEvent(e)) class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Modal Test</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <p>PASS - The modal is working normally.</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary" @onclick=@(()=> bootstrap.Modal(MyModal).Hide())>Hide</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="list-group-item">
        <h3>Alert</h3>
        <div @onbootstrap=@((e)=> LogEvent(e))>
            <div class="alert alert-info alert-dismissible fade show" role="alert">
                Close using a a data attribute
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
            <div @ref=MyAlert class="alert alert-success alert-dismissible fade show" role="alert">
                <a class="btn btn-success" href="javascript:void(0)" @onclick=@(()=> bootstrap.Alert(MyAlert).Close())>Test</a>
                Close with BlazorTools using an ElementReference:
            </div>
            <div id="alert-2" class="alert alert-warning alert-dismissible fade show" role="alert">
                <a class="btn btn-warning" href="javascript:void(0)" @onclick=@(()=> bootstrap.Alert("#alert-2").Close())>Test</a>
                Closed with BlazorTools using a css selector:
            </div>
        </div>
    </div>


    <style>
        /* optional css to make text and controls more visible */
        .carousel-control-prev:hover,
        .carousel-control-next:hover,
        .carousel-caption {
            background-color: rgba(16, 44, 53, 0.5) !important;
        }
    </style>


    <div class="list-group-item ">
        <h3>Carousel</h3>

        <div class="button-group my-2">
            <button class="btn btn-primary" @onclick=@(()=> bootstrap.Carousel("#carousel-1").Prev())>Prev</button>
            <button class="btn btn-danger" @onclick=@(()=> bootstrap.Carousel("#carousel-1").Pause())>Pause</button>
            <button class="btn btn-success" @onclick=@(()=> bootstrap.Carousel("#carousel-1").Cycle())>Cycle</button>
            <button class="btn btn-primary" @onclick=@(()=> bootstrap.Carousel("#carousel-1").Next())>Next</button>
        </div>

         <div id="carousel-1" class="carousel slide mt-2" data-bs-ride="carousel" @onbootstrap=@((e)=> LogEvent(e))>
            <div class="carousel-inner">

                @for (var i = 0; i < 10; i++)
                {
                    <div class="carousel-item  @(i == 0 ? "active": "")">
                        <img src="https://picsum.photos/id/@(1018+i)/650/300" class="d-block h-100 w-auto mx-auto rounded" alt="...">
                        <div class="carousel-caption d-none d-md-block">
                            <h5>Slide Number @i</h5>
                        </div>
                    </div>
                }
            </div>
            <button class="carousel-control-prev" type="button" data-bs-target="#carousel-1" data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#carousel-1" data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button>
        </div>
    </div>


</div>



<div class="list-group-item">
    <h4>Event Log</h4>
    <textarea class="form-control border my-2 p-2" rows="10">
        @EventLog
    </textarea>
</div>


